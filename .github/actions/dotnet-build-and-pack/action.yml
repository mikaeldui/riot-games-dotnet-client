name: .NET Build & Pack 
description: 'Builds the code generator and generates code then builds the client library and tests it and then pushes it'
runs:
  using: "composite"
  steps:  

    - name: Setup .NET
      uses: mikaeldui/actions/dotnet/setup@main

      # Version

    - name: Data Dragon Version
      uses: mikaeldui/actions/riot-games/league-of-legends/data-dragon/version@main
      id: data-dragon

    - name: Generate SemVer Suffix
      uses: mikaeldui/actions/nupkg/semver-suffix@main
      id: semver

    - name: Concat Versions
      id: version
      run: echo "::set-output name=version::${{ steps.data-dragon.outputs.version }}.${{ github.run_number }}${{ steps.semver.outputs.suffix }}"
      shell: bash

      # Code Generation

    - name: 'Code Generation: Restore dependencies'
      working-directory: ./RiotGames.Client.CodeGeneration
      run: dotnet restore
      shell: bash

    - name: 'Code Generation: Run'    
      working-directory: ./RiotGames.Client.CodeGeneration
      run: dotnet run --configuration Release --no-restore /p:Version=${{ steps.version.outputs.version }}
      shell: bash

      # Riot Games Client

    - name: 'Riot Games Client: Restore dependencies'
      working-directory: ./RiotGames.Client
      run: dotnet restore
      shell: bash

    - name: 'Riot Games Client: Build'  
      working-directory: ./RiotGames.Client
      run: dotnet build --configuration Release --no-restore /p:Version=${{ steps.version.outputs.version }}
      shell: bash

      # Tests

    - name: 'Tests: Restore dependencies'
      working-directory: ./RiotGames.Client.Tests
      run: dotnet restore
      shell: bash

    - name: 'Tests: Build' 
      working-directory: ./RiotGames.Client.Tests
      run: dotnet build --configuration Release --no-restore /p:Version=${{ steps.version.outputs.version }}
      shell: bash

    - name: 'Tests: Run Tests'   
      working-directory: ./RiotGames.Client.Tests
      run: dotnet test --configuration Release --no-build
      shell: bash

      # Pack & Publish
      
    - name: 'Pack & Publish Artifact'
      uses: mikaeldui/actions/nupkg/dotnet/pack-and-publish-artifact@main
      with:
        version: ${{ steps.version.outputs.version }}
