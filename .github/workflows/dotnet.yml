name: .NET
on:
  push:
    paths:
    - 'RiotGames.Client/**'    
    - 'RiotGames.Client.CodeGeneration/**'
    - '.github/workflows/*'
    - '.github/actions/**'
  pull_request:
    paths:
    - 'RiotGames.Client/**'    
    - 'RiotGames.Client.CodeGeneration/**'
    - '.github/workflows/*'
    - '.github/actions/**'
jobs:
  build:
    name: 'Build & Pack'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: 'Code Generation: Restore dependencies'
      working-directory: ./RiotGames.Client.CodeGeneration
      run: dotnet restore
    - name: 'Code Generation: Run'    
      working-directory: ./RiotGames.Client.CodeGeneration
      run: dotnet run --configuration Release --no-restore

    - name: 'Set Riot Games API Version'
      id: riot_api_vars
      run: echo "::set-output name=version::12.1.1"

    - name: 'Riot Games Client: Restore dependencies'
      working-directory: ./RiotGames.Client
      run: dotnet restore
    - name: 'Riot Games Client: Build'  
      working-directory: ./RiotGames.Client
      run: dotnet build --configuration Release --no-restore /nowarn:CS8669   

    - name: 'Tests: Restore dependencies'
      working-directory: ./RiotGames.Client.Tests
      run: dotnet restore
    - name: 'Tests: Build' 
      working-directory: ./RiotGames.Client.Tests
      run: dotnet build --configuration Release --no-restore
    - name: 'Tests: Run Tests'   
      working-directory: ./RiotGames.Client.Tests
      run: dotnet test --configuration Release --no-build --verbosity normal
      
    - name: Prepare packaging
      id: vars
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      
    - name: Pack Release
      if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
      uses: ./.github/actions/dotnet-pack-and-publish-artifact
      with:
        version: ${{ steps.riot_api_vars.outputs.version }}.${{ github.run_number }}+${{ steps.vars.outputs.sha_short }}
    - name: Pack Pull Request
      if: ${{ github.event_name == 'pull_request' }}
      uses: ./.github/actions/dotnet-pack-and-publish-artifact
      with:
        version: ${{ steps.riot_api_vars.outputs.version }}.${{ github.run_number }}-pull-request.${{ github.event.pull_request.number }}+${{ steps.vars.outputs.sha_short }}   
    - name: Pack Feature Branch
      if: ${{ startsWith(github.ref, 'refs/heads/features') && github.event_name == 'push' }}
      uses: ./.github/actions/dotnet-pack-and-publish-artifact
      with:
        version: ${{ steps.riot_api_vars.outputs.version }}.${{ github.run_number }}-feature.${GITHUB_REF##*/}+${{ steps.vars.outputs.sha_short }}

  nuget-org:
    name: 'NuGet.org'
    if: ${{ (github.ref == 'refs/heads/main' && github.event_name == 'push') || github.event_name == 'pull_request' || (startsWith(github.ref, 'refs/heads/features') && github.event_name == 'push') }}
    uses: mikaeldui/riot-games-dotnet-client/.github/workflows/nuget.org-deployment.yml@main
    needs: build
    secrets:
      NUGET_ORG_API_KEY: ${{ secrets.NUGET_ORG_API_KEY }}
  github-packages:
    name: 'GitHub Packages'
    if: ${{ (github.ref == 'refs/heads/main' && github.event_name == 'push') || github.event_name == 'pull_request' || (startsWith(github.ref, 'refs/heads/features') && github.event_name == 'push') }}
    needs: build
    uses: mikaeldui/riot-games-dotnet-client/.github/workflows/github-packages-deployment.yml@main

  github-release:
    name: 'GitHub Release'
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
    uses: mikaeldui/riot-games-dotnet-client/.github/workflows/github-release.yml@main
    needs: [nuget.org, github-packages]

  github-pull-request-comment:
    name: 'GitHub Pull Request Comment'
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    needs: [nuget.org, github-packages]
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Download NuGet Package
        uses: actions/download-artifact@v2
        with:
          name: nupkg
      - name: Package Version
        id: version
        uses: ./.github/actions/nuget-package-version
      - name: Comment PR
        uses: thollander/actions-comment-pull-request@v1        
        with:
          message: |
            You can install [the NuGet Package for this pull request from NuGet.org](https://www.nuget.org/packages/MikaelDui.RiotGames.Client/${{ steps.version.outputs.version }}) 
            or [GitHub Packages](https://github.com/mikaeldui/riot-games-dotnet-client/packages/1184018?version=${{ steps.version.outputs.version }}) using either of these commands:

            Using **Package Manager Console** (non-floating version):

                PM> Install-Package MikaelDui.RiotGames.Client --Version ${{ inputs.version }}-pull-request.${{ github.event.pull_request.number }}

            Using the **.NET CLI** (floating version):

                dotnet add package MikaelDui.RiotGames.Client --version *-pull-request.${{ github.event.pull_request.number }}

            Using a PackageReference (floating version):

                <PackageReference Include="MikaelDui.RiotGames.Client" Version="*-pull-request.${{ github.event.pull_request.number }}" />
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}