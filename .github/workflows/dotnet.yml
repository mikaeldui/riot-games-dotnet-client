name: .NET
on:
  push:
    paths:
    - 'RiotGames.Client/**'    
    - 'RiotGames.Client.CodeGeneration/**'
    - '.github/workflows/*'
    - '.github/actions/**'
  pull_request:
    paths:
    - 'RiotGames.Client/**'    
    - 'RiotGames.Client.CodeGeneration/**'
    - '.github/workflows/*'
    - '.github/actions/**'
jobs:
  build:
    name: 'Build & Pack'
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x

      # Version

    - name: Set Riot Games API Version
      id: riot_api_version
      run: echo "::set-output name=version::12.1.1"

    - name: Generate SemVer Suffix
      uses: mikaeldui/actions/nupkg/semver-suffix@main
      id: semver

    - name: Concat Versions
      id: version
      run: echo "::set-output name=version::${{ steps.riot_api_version.outputs.version }}.${{ github.run_number }}${{ steps.semver.outputs.suffix }}"

      # Code Generation

    - name: 'Code Generation: Restore dependencies'
      working-directory: ./RiotGames.Client.CodeGeneration
      run: dotnet restore

    - name: 'Code Generation: Run'    
      working-directory: ./RiotGames.Client.CodeGeneration
      run: dotnet run --configuration Release --no-restore /p:Version=${{ steps.version.outputs.version }}

      # Riot Games Client

    - name: 'Riot Games Client: Restore dependencies'
      working-directory: ./RiotGames.Client
      run: dotnet restore

    - name: 'Riot Games Client: Build'  
      working-directory: ./RiotGames.Client
      run: dotnet build --configuration Release --no-restore /p:Version=${{ steps.version.outputs.version }}

      # Tests

    - name: 'Tests: Restore dependencies'
      working-directory: ./RiotGames.Client.Tests
      run: dotnet restore

    - name: 'Tests: Build' 
      working-directory: ./RiotGames.Client.Tests
      run: dotnet build --configuration Release --no-restore /p:Version=${{ steps.version.outputs.version }}

    - name: 'Tests: Run Tests'   
      working-directory: ./RiotGames.Client.Tests
      run: dotnet test --configuration Release --no-build

      # Pack & Publish
      
    - name: 'Pack & Publish Artifact'
      if: ${{ (github.ref == 'refs/heads/main' && github.event_name == 'push') || github.event_name == 'pull_request' || (startsWith(github.ref, 'refs/heads/features') && github.event_name == 'push') }}
      uses: mikaeldui/actions/nupkg/dotnet/pack-and-publish-artifact@main
      with:
        version: ${{ steps.version.outputs.version }}
        project_directory: ./RiotGames.Client

  nuget-org:
    name: 'NuGet.org'
    if: ${{ (github.ref == 'refs/heads/main' && github.event_name == 'push') || github.event_name == 'pull_request' || (startsWith(github.ref, 'refs/heads/features') && github.event_name == 'push') }}
    uses: mikaeldui/workflows/nupkg/nuget.org-deploy.yml@main
    needs: build
    secrets:
      NUGET_ORG_API_KEY: ${{ secrets.NUGET_ORG_API_KEY }}

  github-packages:
    name: 'GitHub Packages'
    if: ${{ (github.ref == 'refs/heads/main' && github.event_name == 'push') || github.event_name == 'pull_request' || (startsWith(github.ref, 'refs/heads/features') && github.event_name == 'push') }}
    uses: mikaeldui/workflows/nupkg/github-packages-deploy.yml@main
    needs: build

  github-release:
    name: 'GitHub Release'
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
    uses: mikaeldui/workflows/nupkg/github-release.yml@main
    needs: [nuget-org, github-packages]

  github-pull-request-comment:
    name: 'GitHub Pull Request Comment'
    if: ${{ github.event_name == 'pull_request' }}
    needs: [nuget-org, github-packages]
    runs-on: ubuntu-latest
    steps:

      - name: Download NuGet Package
        uses: actions/download-artifact@v2
        with:
          name: nupkg

      - name: Package Version
        uses: mikaeldui/actions/nupkg/version@main
        id: version
        
      - name: Comment PR
        uses: thollander/actions-comment-pull-request@v1        
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          message: |
            You can install [the NuGet Package for this pull request from NuGet.org][nuget.org-package] or [GitHub Packages][github-package] using either of these commands:

            Using **Package Manager Console** (non-floating version):

                PM> Install-Package MikaelDui.RiotGames.Client --Version ${{ steps.version.outputs.version }}-pull-request.${{ github.event.pull_request.number }}

            Using the **.NET CLI** (floating version):

                dotnet add package MikaelDui.RiotGames.Client --version *-pull-request.${{ github.event.pull_request.number }}

            Using a PackageReference (floating version):

                <PackageReference Include="MikaelDui.RiotGames.Client" Version="*-pull-request.${{ github.event.pull_request.number }}" />

            [github-package]: https://github.com/mikaeldui/riot-games-dotnet-client/packages/1184018?version=${{ steps.version.outputs.version }}
            [nuget.org-package]: https://www.nuget.org/packages/MikaelDui.RiotGames.Client/${{ steps.version.outputs.version }}
